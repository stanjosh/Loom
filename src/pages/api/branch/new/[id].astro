---
import BranchDisplay from '../../../partials/BranchDisplay.astro';
import useMongoDB from '../../../../../lib/useMongoDB';



const { id } = Astro.params;
const { method } = Astro.request;

console.log(id, method);

const handleBranch = async () => {
    let currentBranch;
    console.log("current branch: " + currentBranch);
    if (method === 'POST') {
        const newBranchData = await Astro.request.formData()
        const description = newBranchData.get('description');
        const content = newBranchData.get('content');
        console.log("new branch data: " + {description: description, content: content});
        currentBranch = await useMongoDB.createBranch(id, {description: description, content: content});
    } else if (method === 'GET') {
        currentBranch = await useMongoDB.getBranch(id);
    }
    console.log("current branch: " + currentBranch);
    return currentBranch;
}


const branchData = await handleBranch();

let branch = {};


---


{ method === 'GET' ?

    <form hx-post={`/api/branch/new/${id}`}  hx-target="main">


        <input
            value = {branch.description}
            name="description"
            id="description-input"
            placeholder = "What do you do?"
            type="text"
            required
        />
        

        <textarea
            
            value = {branch.content}
            name="content"
            id="story-input"
            placeholder="What happens?"
            rows="10"
            cols="50"
            required
        />

        

        <button type="submit">do it</button> 

    </form>



    <style>
        .new-branch-form {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            margin: 0 auto;
            padding: 2rem;
            width: 100%;
            max-width: 600px;
        }

        input, textarea {
            margin: 1rem 0;
            padding: 1rem;
            width: 100%;
            height: 100%
            border: 1px solid #000;
            color: var(--crt-text)
            background-color: var(--crt-background);
            border-radius: 0;
        }

        input::placeholder, textarea::placeholder {
            color: #000;
        }

        input:focus, textarea:focus {
            outline: none;
            border: 1px solid #000;
        }





    </style>


    : <BranchDisplay branchData={branchData} /> }



   
